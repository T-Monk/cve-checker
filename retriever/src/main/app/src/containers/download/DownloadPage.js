import React, {PropTypes} from 'react';
import {connect} from 'react-redux';
import * as downloadActions from '../../actions/downloadActions';
import * as ajaxActions from '../../actions/ajax';

class DownloadPage extends React.Component {
  constructor(props, context) {
    super(props, context);

    this.state = {
      download: {
        path: ''
      }
    };

    this.onPathChange = this.onPathChange.bind(this);
    this.onClickSave = this.onClickSave.bind(this);
  }

  onPathChange(event) {
    const download = this.state.download;
    download.path = event.target.value;
    this.setState({download: download});
  }

  onClickSave() {
    this.props.setPath(this.state.download.path);
    alert('Path: \"' + this.state.download.path + '\"');
    this.props.downloadCVEs(this.state.download.path);
  }

  displayDownloadLocaiton() {
    if (this.state.download.path) {
      return <p>The CVEs will be downloaed to: '{this.state.download.path}'</p>;
    }

    return <p>You have not specified where you would like the CVEs to be downloaded!</p>;
  }

  render() {
    return (
      <div className="jumbotron">
        <h2>Manage Download</h2>
        {this.displayDownloadLocaiton()}
        <input
          type="text"
          onChange={this.onPathChange}
          value={this.state.download.path} />

        <input
          type="submit"
          value="Download"
          onClick={this.onClickSave} />
      </div>
    );
  }
}

DownloadPage.propTypes = {
  download: PropTypes.object.isRequired,
  setPath: PropTypes.func.isRequired,
  downloadCVEs: PropTypes.func.isRequired
};

const mapStateToProps = state => {
  return {
    download: state.download
  };
};

const mapDispatchToProps = dispatch => {
  return {
    setPath: path => dispatch(downloadActions.setPath(path)),
    downloadCVEs: path => dispatch(ajaxActions.downloadCVEs(path))
  };
};

export default connect(mapStateToProps, mapDispatchToProps)(
  DownloadPage
);
